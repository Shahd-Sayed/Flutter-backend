name: Admin
description: ''
endpoints:
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/home/{home_id}/forceDelete'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Home
      subgroupDescription: ''
      title: 'force-delete a specific item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      home_id:
        name: home_id
        description: 'The ID of the home.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      home_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/home/trashed
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Home
      subgroupDescription: ''
      title: 'Display a listing of Trashed Home items.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/admin/home/trashed could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/home/{home}/restore'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Home
      subgroupDescription: ''
      title: 'restore a specific item from Trashed list.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      home:
        name: home
        description: 'The home.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      home: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/home
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Home
      subgroupDescription: ''
      title: 'Display a listing of Home items.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/admin/home could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/home
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Home
      subgroupDescription: ''
      title: 'Store a new Home item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      description:
        name: description
        description: 'Must not be greater than 200000000 characters.'
        required: true
        example: 'Nesciunt ducimus quisquam vel magni rerum dignissimos.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 10240 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      description: 'Nesciunt ducimus quisquam vel magni rerum dignissimos.'
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/home/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Home
      subgroupDescription: ''
      title: 'Display a specific Home item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the home.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/admin/home/1 could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/home/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Home
      subgroupDescription: ''
      title: 'Update a specific item.'
      description: '@method PUT'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the home.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      description:
        name: description
        description: 'Must not be greater than 200000000 characters.'
        required: true
        example: 'Fugiat accusantium nam quia id dolores.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 10240 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      description: 'Fugiat accusantium nam quia id dolores.'
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/home/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Home
      subgroupDescription: ''
      title: 'soft-delete a specific item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the home.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/achievement/{achievement_id}/forceDelete'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Achievement
      subgroupDescription: ''
      title: 'force-delete a specific item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      achievement_id:
        name: achievement_id
        description: 'The ID of the achievement.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      achievement_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/achievement/trashed
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Achievement
      subgroupDescription: ''
      title: 'Display a listing of Trashed Achievement items.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/admin/achievement/trashed could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/achievement/{achievement}/restore'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Achievement
      subgroupDescription: ''
      title: 'restore a specific item from Trashed list.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      achievement:
        name: achievement
        description: 'The achievement.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      achievement: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/achievement
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Achievement
      subgroupDescription: ''
      title: 'Display a listing of Achievement items.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/admin/achievement could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/achievement
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Achievement
      subgroupDescription: ''
      title: 'Store a new Achievement item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: iczwmdhdkhdlyzjd
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: true
        example: '2024-11-23T11:08:38'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location:
        name: location
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ibsfn
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      members:
        name: members
        description: 'Must be at least 1.'
        required: false
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      rank:
        name: rank
        description: 'Must not be greater than 100 characters.'
        required: true
        example: v
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: iczwmdhdkhdlyzjd
      date: '2024-11-23T11:08:38'
      location: ibsfn
      members: 11
      rank: v
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/achievement/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Achievement
      subgroupDescription: ''
      title: 'Display a specific Achievement item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the achievement.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/admin/achievement/1 could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/achievement/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Achievement
      subgroupDescription: ''
      title: 'Update a specific item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the achievement.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: sggouuciplnxpgx
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: true
        example: '2024-11-23T11:08:38'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location:
        name: location
        description: 'Must not be greater than 255 characters.'
        required: false
        example: z
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      members:
        name: members
        description: 'Must be at least 1.'
        required: false
        example: 77
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      rank:
        name: rank
        description: 'Must not be greater than 100 characters.'
        required: true
        example: nyltchsynlbdb
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: sggouuciplnxpgx
      date: '2024-11-23T11:08:38'
      location: z
      members: 77
      rank: nyltchsynlbdb
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/achievement/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Achievement
      subgroupDescription: ''
      title: 'soft-delete a specific item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the achievement.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/member/{member_id}/forceDelete'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Member
      subgroupDescription: ''
      title: 'force-delete a specific item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      member_id:
        name: member_id
        description: 'The ID of the member.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      member_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/member/trashed
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Member
      subgroupDescription: ''
      title: 'Display a listing of Trashed Member items.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/admin/member/trashed could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/member/{member}/restore'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Member
      subgroupDescription: ''
      title: 'restore a specific item from Trashed list.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      member:
        name: member
        description: 'The member.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      member: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/member
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Member
      subgroupDescription: ''
      title: 'Display a listing of Member items.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/admin/member could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/member
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Member
      subgroupDescription: ''
      title: 'Store a new Member item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: kewmzaavg
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'Must not be greater than 255 characters.'
        required: true
        example: usvgsjfh
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 200000000 characters.'
        required: true
        example: 'Ut et aut quam deserunt illo accusantium velit voluptas.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 10240 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      link1:
        name: link1
        description: 'Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: zpkepkagfrzybkdbcashlonut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      link2:
        name: link2
        description: 'Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: dfimpjm
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      link3:
        name: link3
        description: 'Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: uqcpgwqupyspjawa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: kewmzaavg
      role: usvgsjfh
      description: 'Ut et aut quam deserunt illo accusantium velit voluptas.'
      link1: zpkepkagfrzybkdbcashlonut
      link2: dfimpjm
      link3: uqcpgwqupyspjawa
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/member/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Member
      subgroupDescription: ''
      title: 'Display a specific Member item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the member.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/admin/member/1 could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/member/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Member
      subgroupDescription: ''
      title: 'Update a specific item.'
      description: '@method PUT'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the member.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'Must not be greater than 255 characters.'
        required: true
        example: gvwdmixgmdnzyyutteaje
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 200000000 characters.'
        required: true
        example: 'Officia est possimus omnis amet est repellat minus.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 10240 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      link1:
        name: link1
        description: 'Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: sbxrpcstoat
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      link2:
        name: link2
        description: 'Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: osig
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      link3:
        name: link3
        description: 'Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: jaifkgsngwwljfmns
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: m
      role: gvwdmixgmdnzyyutteaje
      description: 'Officia est possimus omnis amet est repellat minus.'
      link1: sbxrpcstoat
      link2: osig
      link3: jaifkgsngwwljfmns
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/member/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Member
      subgroupDescription: ''
      title: 'soft-delete a specific item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the member.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/about/{about_id}/forceDelete'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: About
      subgroupDescription: ''
      title: 'force-delete a specific item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      about_id:
        name: about_id
        description: 'The ID of the about.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      about_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/about/trashed
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: About
      subgroupDescription: ''
      title: 'Display a listing of Trashed About items.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/admin/about/trashed could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/about/{about}/restore'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: About
      subgroupDescription: ''
      title: 'restore a specific item from Trashed list.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      about:
        name: about
        description: 'The about.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      about: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/about
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: About
      subgroupDescription: ''
      title: 'Display a listing of About items.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/admin/about could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/about
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: About
      subgroupDescription: ''
      title: 'Store a new About item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: mbljzanrjfpvygaqpolrskmf
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 200000000 characters.'
        required: true
        example: 'Ex nemo totam dolorem.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 10240 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      video:
        name: video
        description: 'Must be a file. Must not be greater than 51220000 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: mbljzanrjfpvygaqpolrskmf
      description: 'Ex nemo totam dolorem.'
    fileParameters:
      image: null
      video: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/about/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: About
      subgroupDescription: ''
      title: 'Display a specific About item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the about.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/admin/about/1 could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/about/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: About
      subgroupDescription: ''
      title: 'Update a specific item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the about.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ai
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 200000000 characters.'
        required: false
        example: 'Dolorem sed doloremque mollitia.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 10240 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      video:
        name: video
        description: 'Must be a file. Must not be greater than 51200 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: ai
      description: 'Dolorem sed doloremque mollitia.'
    fileParameters:
      image: null
      video: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/about/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: About
      subgroupDescription: ''
      title: 'soft-delete a specific item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the about.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/committee/{committee_id}/forceDelete'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Committee
      subgroupDescription: ''
      title: 'force-delete a specific item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      committee_id:
        name: committee_id
        description: 'The ID of the committee.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      committee_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/committee/trashed
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Committee
      subgroupDescription: ''
      title: 'Display a listing of Trashed Committee items.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/admin/committee/trashed could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/committee/{committee}/restore'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Committee
      subgroupDescription: ''
      title: 'restore a specific item from Trashed list.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      committee:
        name: committee
        description: 'The committee.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      committee: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/committee
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Committee
      subgroupDescription: ''
      title: 'Display a listing of Committee items.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/admin/committee could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/committee
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Committee
      subgroupDescription: ''
      title: 'Store a new Committee item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ggudw
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: 'Est vel totam quia fugit culpa.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      courses:
        name: courses
        description: ''
        required: false
        example: null
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      about_us:
        name: about_us
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: smjpqehfatxnqnwzclig
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'courses[].course_name':
        name: 'courses[].course_name'
        description: 'Must not be greater than 255 characters.'
        required: true
        example: johqpsilrcknzfcyawa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'courses[].course_description':
        name: 'courses[].course_description'
        description: 'Must not be greater than 20000000 characters.'
        required: false
        example: zxomuyxqkvcqxxfcd
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'courses[].link':
        name: 'courses[].link'
        description: 'Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: xrarwnmnu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: ggudw
      description: 'Est vel totam quia fugit culpa.'
      about_us: smjpqehfatxnqnwzclig
      courses:
        -
          course_name: johqpsilrcknzfcyawa
          course_description: zxomuyxqkvcqxxfcd
          link: xrarwnmnu
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/committee/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Committee
      subgroupDescription: ''
      title: 'Display a specific Committee item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the committee.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/admin/committee/16 could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/committee/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Committee
      subgroupDescription: ''
      title: 'Update a specific item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the committee.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: oeubexdchlsydezw
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: 'Repellendus officia dolorem error a nam ducimus et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      courses:
        name: courses
        description: ''
        required: false
        example: null
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      about_us:
        name: about_us
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: vwrccgtkspnsceyqpsxvs
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'courses[].course_name':
        name: 'courses[].course_name'
        description: 'Must not be greater than 255 characters.'
        required: true
        example: zphhllsugypbilgmtqgpm
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'courses[].course_description':
        name: 'courses[].course_description'
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: qslbniezuhsx
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'courses[].link':
        name: 'courses[].link'
        description: 'Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: wnhtugzmge
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: oeubexdchlsydezw
      description: 'Repellendus officia dolorem error a nam ducimus et.'
      about_us: vwrccgtkspnsceyqpsxvs
      courses:
        -
          course_name: zphhllsugypbilgmtqgpm
          course_description: qslbniezuhsx
          link: wnhtugzmge
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/committee/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Committee
      subgroupDescription: ''
      title: 'soft-delete a specific item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the committee.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
